@using System.Security.Claims
@using GiffyglyphMonsterMakerV3.Data
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> _UserManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">GiffyglyphMonsterMakerV3</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link px-2" href="" Match="NavLinkMatch.All">
                <span class="fa fa-house me-1" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link px-2" href="monstermaker">
                        <span class="fas fa-alien-8bit me-1" aria-hidden="true"></span> Monster Maker
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link px-2" href="print">
                        <span class="fa fa-print me-1" aria-hidden="true"></span> Print Statblocks
                    </NavLink>
                </div>
                @if (@context.User.IsInRole(ADMINISTRATION_ROLE))
                {

                    <div class="nav-item px-3">
                        <NavLink class="nav-link px-2" href="administration">
                            <span class="fas fa-lock me-1" aria-hidden="true"></span> Administration
                        </NavLink>
                    </div>
                }
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    ClaimsPrincipal? User { get; set; }

    string ADMINISTRATION_ROLE = "Administrator";

    protected async override Task OnParametersSetAsync()
    {
        var authState = await authenticationStateTask;
        User = authState.User;
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
