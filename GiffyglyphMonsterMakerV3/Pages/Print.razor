@page "/print"
@attribute [Authorize(Roles = "Administrator, AllowedUser")]
@using GiffyglyphMonsterMakerV3.Data
@using GiffyglyphMonsterMakerV3.Utility

<PageTitle>Print Statblocks</PageTitle>

@if (popQueue == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}else
{
    <div class="container-xxl" id="print">
        <div class="d-print-none alert alert-info">Use your browser's Print feature to print stat blocks. 2 per page, with overflow that looks bad (for now)</div>
        @for (int i = 0; i < Math.Ceiling(Monsters.Count / 2.0); i++)
        {
            <div class="row">
                @if (popQueue.Count > 0)
                {
                    <div class="col-6">
                        <MonsterStatBlock model="popQueue.Dequeue()" Hidden="false"/>
                    </div>
                }
                @if (popQueue.Count > 0)
                {
                    <div class="col-6">
                        <MonsterStatBlock model="popQueue.Dequeue()" Hidden="false"/>
                    </div>
                }
            </div>
            <div class="my-1" style="page-break-after: always">&nbsp;</div>
        }
    </div>
}
@code {
    [CascadingParameter]
    protected List<Monster>? Monsters { get; set; }

    private Queue<Monster>? popQueue { get; set; }

    protected override void OnParametersSet()
    {
        if (Monsters != null)
        {
            popQueue = new Queue<Monster>(Monsters);
        }
    }
}
