@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace GiffyglyphMonsterMakerV3.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="~/css/bootstrap.custom.css" />
    <link id="dark-theme-style" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="GiffyglyphMonsterMakerV3.styles.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Alegreya+Sans">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Libre+Franklin">
    <link rel="icon" type="image/x-icon" href="favicon.ico"/>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/da213e172d.js" crossorigin="anonymous"></script>
    <link href="_content/Blazored.Toast/blazored-toast.min.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

<div id="blazor-error-ui">
    <environment include="Staging,Production">
        An error has occurred. This application may no longer respond until reloaded.
    </environment>
    <environment include="Development">
        An unhandled exception has occurred. See browser dev tools for details.
    </environment>
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<script src="~/js/html2canvas.min.js"></script>
<script>
        // Dark/light theme toggle
        const LOCAL_STORAGE_KEY = "giyyglyphmonstermaker.skyl3lazer"; const LOCAL_META_DATA = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));
        const DARK_THEME_PATH = "/css/bootstrap.custom.dark.css"; const DARK_STYLE_LINK = document.getElementById("dark-theme-style");
        let THEME_TOGGLER = document.getElementById("themeCheckbox"); let isDark = LOCAL_META_DATA && LOCAL_META_DATA.isDark;
        if (isDark) {
            enableDarkTheme();
        } else {
            disableDarkTheme();
        }
        function toggleTheme() {
            isDark = !isDark;
            if (isDark) {
                enableDarkTheme();
            } else {
                disableDarkTheme();
            }
            const META = { isDark };
            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(META));
        } function enableDarkTheme() {
            DARK_STYLE_LINK.setAttribute("href", DARK_THEME_PATH);
        } function disableDarkTheme() {
            DARK_STYLE_LINK.setAttribute("href", "");
        }
        function getThemeToggler(){
            THEME_TOGGLER = document.getElementById("themeCheckbox");
            if(THEME_TOGGLER){
                if(isDark){
                    THEME_TOGGLER.checked = true;
                }else{
                    THEME_TOGGLER.innerHTML = false;
                }
            }
        }
        
        //file download helper
        function saveAsFile(filename, bytesBase64) {
            var link = document.createElement('a');
            link.download = filename;
            link.href = "data:application/octet-stream;base64," + bytesBase64;
            document.body.appendChild(link); // Needed for Firefox
            link.click();
            document.body.removeChild(link);
        }
        window.takeScreenshot = async function(id, filename) {
            var img = "";
            await html2canvas(document.querySelector("#" + id)).then(canvas => img = canvas.toDataURL("image/png"));
            var d = document.createElement("a");
            d.href = img;
            d.download = filename;
            d.click();
            return img;
        }

        //Popovers
        var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl)
        })
    </script>
    <script src="_framework/blazor.server.js"></script>
</body>
</html>